env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
  JUNIT_DEVELOCITY_TESTDISTRIBUTION_ENABLED: true
jobs:
  Linux:
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - continue-on-error: true
      name: Install Graphviz
      run: 'sudo apt-get update

        sudo apt-get install graphviz

        '
    - continue-on-error: true
      name: Install GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        distribution: graalvm-community
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: '21'
        version: latest
    - continue-on-error: true
      name: Build
      uses: ./.github/actions/main-build
      with:
        arguments: '-Ptesting.enableJaCoCo \

          build \

          jacocoRootReport

          '
    - continue-on-error: true
      name: Upload to Codecov.io
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - continue-on-error: true
      name: Run Asciidoctor
      uses: ./.github/actions/run-gradle
      with:
        arguments: 'prepareDocsForUploadToGhPages \

          --no-configuration-cache

          '
  Windows:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - continue-on-error: true
      name: Build
      uses: ./.github/actions/main-build
  macOS:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - continue-on-error: true
      name: Build
      uses: ./.github/actions/main-build
  publish_artifacts:
    if: github.event_name == 'push' && github.repository == 'junit-team/junit5' &&
      (startsWith(github.ref, 'refs/heads/releases/') || github.ref == 'refs/heads/main')
    name: Publish Snapshot Artifacts
    needs: linux
    permissions:
      attestations: write
      id-token: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
      name: Publish
      uses: ./.github/actions/run-gradle
      with:
        arguments: 'publish -x check \

          prepareGitHubAttestation

          '
    - continue-on-error: true
      name: Generate build provenance attestations
      uses: actions/attest-build-provenance@49df96e17e918a15956db358890b08e61c704919
      with:
        subject-path: documentation/build/attestation/*.jar
  update_documentation:
    concurrency:
      cancel-in-progress: true
      group: github-pages
    if: github.event_name == 'push' && github.repository == 'junit-team/junit5' &&
      github.ref == 'refs/heads/main'
    name: Update Snapshot Documentation
    needs: Linux
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - continue-on-error: true
      name: Install Graphviz
      run: 'sudo apt-get update

        sudo apt-get install graphviz

        '
    - continue-on-error: true
      env:
        GRGIT_USER: ${{ secrets.GH_TOKEN }}
      name: Upload Documentation
      uses: ./.github/actions/run-gradle
      with:
        arguments: 'gitPublishPush \

          -Dscan.tag.Documentation \

          --no-configuration-cache

          '
name: CI
on:
  repository_dispatch:
    types: trigger-ga___main.yml
